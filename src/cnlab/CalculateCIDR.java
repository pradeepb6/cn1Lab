/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cnlab;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Pradeep
 */
public class CalculateCIDR extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public CalculateCIDR() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputIPView = new javax.swing.JTextField();
        cidrView = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        netmaskIPView = new javax.swing.JTextField();
        noOfHostsView = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nwAddrView = new javax.swing.JTextField();
        broadcastAddrView = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        firstIPAddrView = new javax.swing.JTextField();
        lastIPAddrView = new javax.swing.JTextField();
        clearFields = new javax.swing.JButton();
        calculateAddressButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setEditable(false);
        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("CIDR Calculator");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
        );

        jLabel1.setText("IPv4 Address");

        jLabel2.setText("CIDR");

        jLabel3.setText("Netmask IP");

        jLabel4.setText("No. of Hosts");

        netmaskIPView.setEditable(false);

        noOfHostsView.setEditable(false);

        jLabel5.setText("Network Address");

        jLabel6.setText("Broadcast Address");

        nwAddrView.setEditable(false);

        broadcastAddrView.setEditable(false);

        jLabel7.setText("First  usable IP Address");

        jLabel8.setText("Last Usable IP Address");

        firstIPAddrView.setEditable(false);

        lastIPAddrView.setEditable(false);

        clearFields.setText("Clear");
        clearFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldsActionPerformed(evt);
            }
        });

        calculateAddressButton.setText("Submit");
        calculateAddressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateAddressButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(inputIPView, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(nwAddrView)
                    .addComponent(jLabel7)
                    .addComponent(firstIPAddrView)
                    .addComponent(netmaskIPView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4)
                        .addComponent(noOfHostsView, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addComponent(broadcastAddrView)
                        .addComponent(jLabel8)
                        .addComponent(lastIPAddrView))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(clearFields)
                        .addGap(18, 18, 18)
                        .addComponent(calculateAddressButton))
                    .addComponent(cidrView, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputIPView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cidrView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(netmaskIPView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noOfHostsView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nwAddrView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(broadcastAddrView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstIPAddrView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastIPAddrView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearFields)
                    .addComponent(calculateAddressButton))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("IPv4 Address", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("IPv6 Address", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldsActionPerformed
        
        inputIPView.setText("");
        cidrView.setText("");
        netmaskIPView.setText("");
        noOfHostsView.setText("");
        nwAddrView.setText("");
        broadcastAddrView.setText("");
        firstIPAddrView.setText("");
        lastIPAddrView.setText("");
        inputIPView.requestFocus();
    }//GEN-LAST:event_clearFieldsActionPerformed

    private void calculateAddressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateAddressButtonActionPerformed
        allImplementation allImplementation1 = new allImplementation();
         final String IPv4Address_PATTERN =
                "^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
                        "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
                        "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
                        "([01]?\\d\\d?|2[0-4]\\d|25[0-5])$";
         Pattern pattern = Pattern.compile(IPv4Address_PATTERN);
        
         String input =inputIPView.getText().trim();
         String temp_subnetMask= cidrView.getText().trim();
        int subnetMask=0,maximumHosts;
        String ipAdd ="";
        String cidr = "";
        Matcher matcher = pattern.matcher(input);
        boolean correctIP = allImplementation1.StrIP2Dec(input);
        if((temp_subnetMask.isEmpty()) || (input.isEmpty() && !matcher.matches())){
            if(input.isEmpty() || !matcher.matches()){
                JOptionPane.showMessageDialog(null, "IP address error");
                inputIPView.requestFocus();
                return;
            }            
            if( temp_subnetMask.isEmpty()){
                JOptionPane.showMessageDialog(null, "CIDR");
                cidrView.requestFocus();
                return;
            }   
        }else if(!correctIP){
            JOptionPane.showMessageDialog(null, "Please put proper IP address");
            inputIPView.requestFocus();
            return;
        }else{
                allImplementation1.StrIP2Dec(input);
                subnetMask = Integer.parseInt(temp_subnetMask);
                if(subnetMask<0 || subnetMask > 32){
                    JOptionPane.showMessageDialog(null, "CIDR");
                    cidrView.requestFocus();
                    return;
                }
        }
        int bitMaskValue = (1 << (32-subnetMask)) - 1;
        
        int ip32bit=0;
        try {
            ip32bit = allImplementation1.convertStrIP2IntIP(input);
        } catch (Exception e) {
        }
        
        
        int tempNetworkIP = ip32bit & (~bitMaskValue);
        int networkAddIP = tempNetworkIP;
        int firstIP = tempNetworkIP + 1;
        int tempBroadCastIP = firstIP | bitMaskValue;
        int broadCastIP = tempBroadCastIP;
        int lastIP = tempBroadCastIP - 1;

        String firstIPAddress = allImplementation1.convertIntIP2StrIP(firstIP);
        String lastIPAddress = allImplementation1.convertIntIP2StrIP(lastIP);
        String broadCastAddress = allImplementation1.convertIntIP2StrIP(broadCastIP);
        String networkAddress = allImplementation1.convertIntIP2StrIP(networkAddIP);

        if (bitMaskValue>0)
        {
            maximumHosts = bitMaskValue - 1;
        }else
        {
            maximumHosts = 0;
        }
        int netmaskVal=(~bitMaskValue);
        String binaryNetmask = allImplementation1.convertIntIP2StrIP(netmaskVal);

        netmaskIPView.setText(""+binaryNetmask);
        noOfHostsView.setText(""+maximumHosts);
        firstIPAddrView.setText(firstIPAddress);
        lastIPAddrView.setText(lastIPAddress);
        broadcastAddrView.setText(broadCastAddress);
        nwAddrView.setText(networkAddress);
    }//GEN-LAST:event_calculateAddressButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculateCIDR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculateCIDR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculateCIDR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculateCIDR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CalculateCIDR().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField broadcastAddrView;
    private javax.swing.JButton calculateAddressButton;
    private javax.swing.JTextField cidrView;
    private javax.swing.JButton clearFields;
    private javax.swing.JTextField firstIPAddrView;
    private javax.swing.JTextField inputIPView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField lastIPAddrView;
    private javax.swing.JTextField netmaskIPView;
    private javax.swing.JTextField noOfHostsView;
    private javax.swing.JTextField nwAddrView;
    // End of variables declaration//GEN-END:variables
}
